;;; cl-gsl/gsl.lisp

(cl:in-package "GSL")

;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 3.0.10
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.


(cffi:defctype size_t :unsigned-int)

(cffi:defcfun ("gsl_ran_bernoulli" gsl_ran_bernoulli) :unsigned-int
  (r :pointer)
  (p :double))

(cffi:defcfun ("gsl_ran_bernoulli_pdf" gsl_ran_bernoulli_pdf) :double
  (k :unsigned-int)
  (p :double))

(cffi:defcfun ("gsl_ran_beta" gsl_ran_beta) :double
  (r :pointer)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_beta_pdf" gsl_ran_beta_pdf) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_binomial" gsl_ran_binomial) :unsigned-int
  (r :pointer)
  (p :double)
  (n :unsigned-int))

(cffi:defcfun ("gsl_ran_binomial_knuth" gsl_ran_binomial_knuth) :unsigned-int
  (r :pointer)
  (p :double)
  (n :unsigned-int))

(cffi:defcfun ("gsl_ran_binomial_tpe" gsl_ran_binomial_tpe) :unsigned-int
  (r :pointer)
  (p :double)
  (n :unsigned-int))

(cffi:defcfun ("gsl_ran_binomial_pdf" gsl_ran_binomial_pdf) :double
  (k :unsigned-int)
  (p :double)
  (n :unsigned-int))

(cffi:defcfun ("gsl_ran_exponential" gsl_ran_exponential) :double
  (r :pointer)
  (mu :double))

(cffi:defcfun ("gsl_ran_exponential_pdf" gsl_ran_exponential_pdf) :double
  (x :double)
  (mu :double))

(cffi:defcfun ("gsl_ran_exppow" gsl_ran_exppow) :double
  (r :pointer)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_exppow_pdf" gsl_ran_exppow_pdf) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_cauchy" gsl_ran_cauchy) :double
  (r :pointer)
  (a :double))

(cffi:defcfun ("gsl_ran_cauchy_pdf" gsl_ran_cauchy_pdf) :double
  (x :double)
  (a :double))

(cffi:defcfun ("gsl_ran_chisq" gsl_ran_chisq) :double
  (r :pointer)
  (nu :double))

(cffi:defcfun ("gsl_ran_chisq_pdf" gsl_ran_chisq_pdf) :double
  (x :double)
  (nu :double))

(cffi:defcfun ("gsl_ran_dirichlet" gsl_ran_dirichlet) :void
  (r :pointer)
  (K :unsigned-int)
  (alpha :pointer)
  (theta :pointer))

(cffi:defcfun ("gsl_ran_dirichlet_pdf" gsl_ran_dirichlet_pdf) :double
  (K :unsigned-int)
  (alpha :pointer)
  (theta :pointer))

(cffi:defcfun ("gsl_ran_dirichlet_lnpdf" gsl_ran_dirichlet_lnpdf) :double
  (K :unsigned-int)
  (alpha :pointer)
  (theta :pointer))

(cffi:defcfun ("gsl_ran_erlang" gsl_ran_erlang) :double
  (r :pointer)
  (a :double)
  (n :double))

(cffi:defcfun ("gsl_ran_erlang_pdf" gsl_ran_erlang_pdf) :double
  (x :double)
  (a :double)
  (n :double))

(cffi:defcfun ("gsl_ran_fdist" gsl_ran_fdist) :double
  (r :pointer)
  (nu1 :double)
  (nu2 :double))

(cffi:defcfun ("gsl_ran_fdist_pdf" gsl_ran_fdist_pdf) :double
  (x :double)
  (nu1 :double)
  (nu2 :double))

(cffi:defcfun ("gsl_ran_flat" gsl_ran_flat) :double
  (r :pointer)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_flat_pdf" gsl_ran_flat_pdf) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_gamma" gsl_ran_gamma) :double
  (r :pointer)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_gamma_int" gsl_ran_gamma_int) :double
  (r :pointer)
  (a :unsigned-int))

(cffi:defcfun ("gsl_ran_gamma_pdf" gsl_ran_gamma_pdf) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_gamma_mt" gsl_ran_gamma_mt) :double
  (r :pointer)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_gamma_knuth" gsl_ran_gamma_knuth) :double
  (r :pointer)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_gaussian" gsl_ran_gaussian) :double
  (r :pointer)
  (sigma :double))

(cffi:defcfun ("gsl_ran_gaussian_ratio_method" gsl_ran_gaussian_ratio_method) :double
  (r :pointer)
  (sigma :double))

(cffi:defcfun ("gsl_ran_gaussian_ziggurat" gsl_ran_gaussian_ziggurat) :double
  (r :pointer)
  (sigma :double))

(cffi:defcfun ("gsl_ran_gaussian_pdf" gsl_ran_gaussian_pdf) :double
  (x :double)
  (sigma :double))

(cffi:defcfun ("gsl_ran_ugaussian" gsl_ran_ugaussian) :double
  (r :pointer))

(cffi:defcfun ("gsl_ran_ugaussian_ratio_method" gsl_ran_ugaussian_ratio_method) :double
  (r :pointer))

(cffi:defcfun ("gsl_ran_ugaussian_pdf" gsl_ran_ugaussian_pdf) :double
  (x :double))

(cffi:defcfun ("gsl_ran_gaussian_tail" gsl_ran_gaussian_tail) :double
  (r :pointer)
  (a :double)
  (sigma :double))

(cffi:defcfun ("gsl_ran_gaussian_tail_pdf" gsl_ran_gaussian_tail_pdf) :double
  (x :double)
  (a :double)
  (sigma :double))

(cffi:defcfun ("gsl_ran_ugaussian_tail" gsl_ran_ugaussian_tail) :double
  (r :pointer)
  (a :double))

(cffi:defcfun ("gsl_ran_ugaussian_tail_pdf" gsl_ran_ugaussian_tail_pdf) :double
  (x :double)
  (a :double))

(cffi:defcfun ("gsl_ran_bivariate_gaussian" gsl_ran_bivariate_gaussian) :void
  (r :pointer)
  (sigma_x :double)
  (sigma_y :double)
  (rho :double)
  (x :pointer)
  (y :pointer))

(cffi:defcfun ("gsl_ran_bivariate_gaussian_pdf" gsl_ran_bivariate_gaussian_pdf) :double
  (x :double)
  (y :double)
  (sigma_x :double)
  (sigma_y :double)
  (rho :double))

(cffi:defcfun ("gsl_ran_landau" gsl_ran_landau) :double
  (r :pointer))

(cffi:defcfun ("gsl_ran_landau_pdf" gsl_ran_landau_pdf) :double
  (x :double))

(cffi:defcfun ("gsl_ran_geometric" gsl_ran_geometric) :unsigned-int
  (r :pointer)
  (p :double))

(cffi:defcfun ("gsl_ran_geometric_pdf" gsl_ran_geometric_pdf) :double
  (k :unsigned-int)
  (p :double))

(cffi:defcfun ("gsl_ran_hypergeometric" gsl_ran_hypergeometric) :unsigned-int
  (r :pointer)
  (n1 :unsigned-int)
  (n2 :unsigned-int)
  (t_arg3 :unsigned-int))

(cffi:defcfun ("gsl_ran_hypergeometric_pdf" gsl_ran_hypergeometric_pdf) :double
  (k :unsigned-int)
  (n1 :unsigned-int)
  (n2 :unsigned-int)
  (t_arg3 :unsigned-int))

(cffi:defcfun ("gsl_ran_gumbel1" gsl_ran_gumbel1) :double
  (r :pointer)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_gumbel1_pdf" gsl_ran_gumbel1_pdf) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_gumbel2" gsl_ran_gumbel2) :double
  (r :pointer)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_gumbel2_pdf" gsl_ran_gumbel2_pdf) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_logistic" gsl_ran_logistic) :double
  (r :pointer)
  (a :double))

(cffi:defcfun ("gsl_ran_logistic_pdf" gsl_ran_logistic_pdf) :double
  (x :double)
  (a :double))

(cffi:defcfun ("gsl_ran_lognormal" gsl_ran_lognormal) :double
  (r :pointer)
  (zeta :double)
  (sigma :double))

(cffi:defcfun ("gsl_ran_lognormal_pdf" gsl_ran_lognormal_pdf) :double
  (x :double)
  (zeta :double)
  (sigma :double))

(cffi:defcfun ("gsl_ran_logarithmic" gsl_ran_logarithmic) :unsigned-int
  (r :pointer)
  (p :double))

(cffi:defcfun ("gsl_ran_logarithmic_pdf" gsl_ran_logarithmic_pdf) :double
  (k :unsigned-int)
  (p :double))

(cffi:defcfun ("gsl_ran_multinomial" gsl_ran_multinomial) :void
  (r :pointer)
  (K :unsigned-int)
  (N :unsigned-int)
  (p :pointer)
  (m :pointer))

(cffi:defcfun ("gsl_ran_multinomial_pdf" gsl_ran_multinomial_pdf) :double
  (K :unsigned-int)
  (p :pointer)
  (n :pointer))

(cffi:defcfun ("gsl_ran_multinomial_lnpdf" gsl_ran_multinomial_lnpdf) :double
  (K :unsigned-int)
  (p :pointer)
  (n :pointer))

(cffi:defcfun ("gsl_ran_negative_binomial" gsl_ran_negative_binomial) :unsigned-int
  (r :pointer)
  (p :double)
  (n :double))

(cffi:defcfun ("gsl_ran_negative_binomial_pdf" gsl_ran_negative_binomial_pdf) :double
  (k :unsigned-int)
  (p :double)
  (n :double))

(cffi:defcfun ("gsl_ran_pascal" gsl_ran_pascal) :unsigned-int
  (r :pointer)
  (p :double)
  (n :unsigned-int))

(cffi:defcfun ("gsl_ran_pascal_pdf" gsl_ran_pascal_pdf) :double
  (k :unsigned-int)
  (p :double)
  (n :unsigned-int))

(cffi:defcfun ("gsl_ran_pareto" gsl_ran_pareto) :double
  (r :pointer)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_pareto_pdf" gsl_ran_pareto_pdf) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_poisson" gsl_ran_poisson) :unsigned-int
  (r :pointer)
  (mu :double))

(cffi:defcfun ("gsl_ran_poisson_array" gsl_ran_poisson_array) :void
  (r :pointer)
  (n :unsigned-int)
  (array :pointer)
  (mu :double))

(cffi:defcfun ("gsl_ran_poisson_pdf" gsl_ran_poisson_pdf) :double
  (k :unsigned-int)
  (mu :double))

(cffi:defcfun ("gsl_ran_rayleigh" gsl_ran_rayleigh) :double
  (r :pointer)
  (sigma :double))

(cffi:defcfun ("gsl_ran_rayleigh_pdf" gsl_ran_rayleigh_pdf) :double
  (x :double)
  (sigma :double))

(cffi:defcfun ("gsl_ran_rayleigh_tail" gsl_ran_rayleigh_tail) :double
  (r :pointer)
  (a :double)
  (sigma :double))

(cffi:defcfun ("gsl_ran_rayleigh_tail_pdf" gsl_ran_rayleigh_tail_pdf) :double
  (x :double)
  (a :double)
  (sigma :double))

(cffi:defcfun ("gsl_ran_tdist" gsl_ran_tdist) :double
  (r :pointer)
  (nu :double))

(cffi:defcfun ("gsl_ran_tdist_pdf" gsl_ran_tdist_pdf) :double
  (x :double)
  (nu :double))

(cffi:defcfun ("gsl_ran_laplace" gsl_ran_laplace) :double
  (r :pointer)
  (a :double))

(cffi:defcfun ("gsl_ran_laplace_pdf" gsl_ran_laplace_pdf) :double
  (x :double)
  (a :double))

(cffi:defcfun ("gsl_ran_levy" gsl_ran_levy) :double
  (r :pointer)
  (c :double)
  (alpha :double))

(cffi:defcfun ("gsl_ran_levy_skew" gsl_ran_levy_skew) :double
  (r :pointer)
  (c :double)
  (alpha :double)
  (beta :double))

(cffi:defcfun ("gsl_ran_weibull" gsl_ran_weibull) :double
  (r :pointer)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_weibull_pdf" gsl_ran_weibull_pdf) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_ran_dir_2d" gsl_ran_dir_2d) :void
  (r :pointer)
  (x :pointer)
  (y :pointer))

(cffi:defcfun ("gsl_ran_dir_2d_trig_method" gsl_ran_dir_2d_trig_method) :void
  (r :pointer)
  (x :pointer)
  (y :pointer))

(cffi:defcfun ("gsl_ran_dir_3d" gsl_ran_dir_3d) :void
  (r :pointer)
  (x :pointer)
  (y :pointer)
  (z :pointer))

(cffi:defcfun ("gsl_ran_dir_nd" gsl_ran_dir_nd) :void
  (r :pointer)
  (n :unsigned-int)
  (x :pointer))

(cffi:defcfun ("gsl_ran_shuffle" gsl_ran_shuffle) :void
  (r :pointer)
  (base :pointer)
  (nmembm :unsigned-int)
  (size :unsigned-int))

(cffi:defcfun ("gsl_ran_choose" gsl_ran_choose) :int
  (r :pointer)
  (dest :pointer)
  (k :unsigned-int)
  (src :pointer)
  (n :unsigned-int)
  (size :unsigned-int))

(cffi:defcfun ("gsl_ran_sample" gsl_ran_sample) :void
  (r :pointer)
  (dest :pointer)
  (k :unsigned-int)
  (src :pointer)
  (n :unsigned-int)
  (size :unsigned-int))

(cffi:defcstruct gsl_ran_discrete_t
	(K :unsigned-int)
	(A :pointer)
	(F :pointer))

(cffi:defcfun ("gsl_ran_discrete_preproc" gsl_ran_discrete_preproc) :pointer
  (K :unsigned-int)
  (P :pointer))

(cffi:defcfun ("gsl_ran_discrete_free" gsl_ran_discrete_free) :void
  (g :pointer))

(cffi:defcfun ("gsl_ran_discrete" gsl_ran_discrete) :unsigned-int
  (r :pointer)
  (g :pointer))

(cffi:defcfun ("gsl_ran_discrete_pdf" gsl_ran_discrete_pdf) :double
  (k :unsigned-int)
  (g :pointer))

(cffi:defcfun ("gsl_cdf_ugaussian_P" gsl_cdf_ugaussian_P) :double
  (x :double))

(cffi:defcfun ("gsl_cdf_ugaussian_Q" gsl_cdf_ugaussian_Q) :double
  (x :double))

(cffi:defcfun ("gsl_cdf_ugaussian_Pinv" gsl_cdf_ugaussian_Pinv) :double
  (P :double))

(cffi:defcfun ("gsl_cdf_ugaussian_Qinv" gsl_cdf_ugaussian_Qinv) :double
  (Q :double))

(cffi:defcfun ("gsl_cdf_gaussian_P" gsl_cdf_gaussian_P) :double
  (x :double)
  (sigma :double))

(cffi:defcfun ("gsl_cdf_gaussian_Q" gsl_cdf_gaussian_Q) :double
  (x :double)
  (sigma :double))

(cffi:defcfun ("gsl_cdf_gaussian_Pinv" gsl_cdf_gaussian_Pinv) :double
  (P :double)
  (sigma :double))

(cffi:defcfun ("gsl_cdf_gaussian_Qinv" gsl_cdf_gaussian_Qinv) :double
  (Q :double)
  (sigma :double))

(cffi:defcfun ("gsl_cdf_gamma_P" gsl_cdf_gamma_P) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_gamma_Q" gsl_cdf_gamma_Q) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_gamma_Pinv" gsl_cdf_gamma_Pinv) :double
  (P :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_gamma_Qinv" gsl_cdf_gamma_Qinv) :double
  (Q :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_cauchy_P" gsl_cdf_cauchy_P) :double
  (x :double)
  (a :double))

(cffi:defcfun ("gsl_cdf_cauchy_Q" gsl_cdf_cauchy_Q) :double
  (x :double)
  (a :double))

(cffi:defcfun ("gsl_cdf_cauchy_Pinv" gsl_cdf_cauchy_Pinv) :double
  (P :double)
  (a :double))

(cffi:defcfun ("gsl_cdf_cauchy_Qinv" gsl_cdf_cauchy_Qinv) :double
  (Q :double)
  (a :double))

(cffi:defcfun ("gsl_cdf_laplace_P" gsl_cdf_laplace_P) :double
  (x :double)
  (a :double))

(cffi:defcfun ("gsl_cdf_laplace_Q" gsl_cdf_laplace_Q) :double
  (x :double)
  (a :double))

(cffi:defcfun ("gsl_cdf_laplace_Pinv" gsl_cdf_laplace_Pinv) :double
  (P :double)
  (a :double))

(cffi:defcfun ("gsl_cdf_laplace_Qinv" gsl_cdf_laplace_Qinv) :double
  (Q :double)
  (a :double))

(cffi:defcfun ("gsl_cdf_rayleigh_P" gsl_cdf_rayleigh_P) :double
  (x :double)
  (sigma :double))

(cffi:defcfun ("gsl_cdf_rayleigh_Q" gsl_cdf_rayleigh_Q) :double
  (x :double)
  (sigma :double))

(cffi:defcfun ("gsl_cdf_rayleigh_Pinv" gsl_cdf_rayleigh_Pinv) :double
  (P :double)
  (sigma :double))

(cffi:defcfun ("gsl_cdf_rayleigh_Qinv" gsl_cdf_rayleigh_Qinv) :double
  (Q :double)
  (sigma :double))

(cffi:defcfun ("gsl_cdf_chisq_P" gsl_cdf_chisq_P) :double
  (x :double)
  (nu :double))

(cffi:defcfun ("gsl_cdf_chisq_Q" gsl_cdf_chisq_Q) :double
  (x :double)
  (nu :double))

(cffi:defcfun ("gsl_cdf_chisq_Pinv" gsl_cdf_chisq_Pinv) :double
  (P :double)
  (nu :double))

(cffi:defcfun ("gsl_cdf_chisq_Qinv" gsl_cdf_chisq_Qinv) :double
  (Q :double)
  (nu :double))

(cffi:defcfun ("gsl_cdf_exponential_P" gsl_cdf_exponential_P) :double
  (x :double)
  (mu :double))

(cffi:defcfun ("gsl_cdf_exponential_Q" gsl_cdf_exponential_Q) :double
  (x :double)
  (mu :double))

(cffi:defcfun ("gsl_cdf_exponential_Pinv" gsl_cdf_exponential_Pinv) :double
  (P :double)
  (mu :double))

(cffi:defcfun ("gsl_cdf_exponential_Qinv" gsl_cdf_exponential_Qinv) :double
  (Q :double)
  (mu :double))

(cffi:defcfun ("gsl_cdf_exppow_P" gsl_cdf_exppow_P) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_exppow_Q" gsl_cdf_exppow_Q) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_tdist_P" gsl_cdf_tdist_P) :double
  (x :double)
  (nu :double))

(cffi:defcfun ("gsl_cdf_tdist_Q" gsl_cdf_tdist_Q) :double
  (x :double)
  (nu :double))

(cffi:defcfun ("gsl_cdf_tdist_Pinv" gsl_cdf_tdist_Pinv) :double
  (P :double)
  (nu :double))

(cffi:defcfun ("gsl_cdf_tdist_Qinv" gsl_cdf_tdist_Qinv) :double
  (Q :double)
  (nu :double))

(cffi:defcfun ("gsl_cdf_fdist_P" gsl_cdf_fdist_P) :double
  (x :double)
  (nu1 :double)
  (nu2 :double))

(cffi:defcfun ("gsl_cdf_fdist_Q" gsl_cdf_fdist_Q) :double
  (x :double)
  (nu1 :double)
  (nu2 :double))

(cffi:defcfun ("gsl_cdf_fdist_Pinv" gsl_cdf_fdist_Pinv) :double
  (P :double)
  (nu1 :double)
  (nu2 :double))

(cffi:defcfun ("gsl_cdf_fdist_Qinv" gsl_cdf_fdist_Qinv) :double
  (Q :double)
  (nu1 :double)
  (nu2 :double))

(cffi:defcfun ("gsl_cdf_beta_P" gsl_cdf_beta_P) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_beta_Q" gsl_cdf_beta_Q) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_beta_Pinv" gsl_cdf_beta_Pinv) :double
  (P :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_beta_Qinv" gsl_cdf_beta_Qinv) :double
  (Q :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_flat_P" gsl_cdf_flat_P) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_flat_Q" gsl_cdf_flat_Q) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_flat_Pinv" gsl_cdf_flat_Pinv) :double
  (P :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_flat_Qinv" gsl_cdf_flat_Qinv) :double
  (Q :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_lognormal_P" gsl_cdf_lognormal_P) :double
  (x :double)
  (zeta :double)
  (sigma :double))

(cffi:defcfun ("gsl_cdf_lognormal_Q" gsl_cdf_lognormal_Q) :double
  (x :double)
  (zeta :double)
  (sigma :double))

(cffi:defcfun ("gsl_cdf_lognormal_Pinv" gsl_cdf_lognormal_Pinv) :double
  (P :double)
  (zeta :double)
  (sigma :double))

(cffi:defcfun ("gsl_cdf_lognormal_Qinv" gsl_cdf_lognormal_Qinv) :double
  (Q :double)
  (zeta :double)
  (sigma :double))

(cffi:defcfun ("gsl_cdf_gumbel1_P" gsl_cdf_gumbel1_P) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_gumbel1_Q" gsl_cdf_gumbel1_Q) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_gumbel1_Pinv" gsl_cdf_gumbel1_Pinv) :double
  (P :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_gumbel1_Qinv" gsl_cdf_gumbel1_Qinv) :double
  (Q :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_gumbel2_P" gsl_cdf_gumbel2_P) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_gumbel2_Q" gsl_cdf_gumbel2_Q) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_gumbel2_Pinv" gsl_cdf_gumbel2_Pinv) :double
  (P :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_gumbel2_Qinv" gsl_cdf_gumbel2_Qinv) :double
  (Q :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_weibull_P" gsl_cdf_weibull_P) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_weibull_Q" gsl_cdf_weibull_Q) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_weibull_Pinv" gsl_cdf_weibull_Pinv) :double
  (P :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_weibull_Qinv" gsl_cdf_weibull_Qinv) :double
  (Q :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_pareto_P" gsl_cdf_pareto_P) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_pareto_Q" gsl_cdf_pareto_Q) :double
  (x :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_pareto_Pinv" gsl_cdf_pareto_Pinv) :double
  (P :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_pareto_Qinv" gsl_cdf_pareto_Qinv) :double
  (Q :double)
  (a :double)
  (b :double))

(cffi:defcfun ("gsl_cdf_logistic_P" gsl_cdf_logistic_P) :double
  (x :double)
  (a :double))

(cffi:defcfun ("gsl_cdf_logistic_Q" gsl_cdf_logistic_Q) :double
  (x :double)
  (a :double))

(cffi:defcfun ("gsl_cdf_logistic_Pinv" gsl_cdf_logistic_Pinv) :double
  (P :double)
  (a :double))

(cffi:defcfun ("gsl_cdf_logistic_Qinv" gsl_cdf_logistic_Qinv) :double
  (Q :double)
  (a :double))

(cffi:defcfun ("gsl_cdf_binomial_P" gsl_cdf_binomial_P) :double
  (k :unsigned-int)
  (p :double)
  (n :unsigned-int))

(cffi:defcfun ("gsl_cdf_binomial_Q" gsl_cdf_binomial_Q) :double
  (k :unsigned-int)
  (p :double)
  (n :unsigned-int))

(cffi:defcfun ("gsl_cdf_poisson_P" gsl_cdf_poisson_P) :double
  (k :unsigned-int)
  (mu :double))

(cffi:defcfun ("gsl_cdf_poisson_Q" gsl_cdf_poisson_Q) :double
  (k :unsigned-int)
  (mu :double))

(cffi:defcfun ("gsl_cdf_geometric_P" gsl_cdf_geometric_P) :double
  (k :unsigned-int)
  (p :double))

(cffi:defcfun ("gsl_cdf_geometric_Q" gsl_cdf_geometric_Q) :double
  (k :unsigned-int)
  (p :double))

(cffi:defcfun ("gsl_cdf_negative_binomial_P" gsl_cdf_negative_binomial_P) :double
  (k :unsigned-int)
  (p :double)
  (n :double))

(cffi:defcfun ("gsl_cdf_negative_binomial_Q" gsl_cdf_negative_binomial_Q) :double
  (k :unsigned-int)
  (p :double)
  (n :double))

(cffi:defcfun ("gsl_cdf_pascal_P" gsl_cdf_pascal_P) :double
  (k :unsigned-int)
  (p :double)
  (n :unsigned-int))

(cffi:defcfun ("gsl_cdf_pascal_Q" gsl_cdf_pascal_Q) :double
  (k :unsigned-int)
  (p :double)
  (n :unsigned-int))

(cffi:defcfun ("gsl_cdf_hypergeometric_P" gsl_cdf_hypergeometric_P) :double
  (k :unsigned-int)
  (n1 :unsigned-int)
  (n2 :unsigned-int)
  (t_arg3 :unsigned-int))

(cffi:defcfun ("gsl_cdf_hypergeometric_Q" gsl_cdf_hypergeometric_Q) :double
  (k :unsigned-int)
  (n1 :unsigned-int)
  (n2 :unsigned-int)
  (t_arg3 :unsigned-int))


