#!/usr/bin/env sbcl --script


;;; initialize

;; quicklisp
(let ((quicklisp-init (merge-pathnames ".quicklisp/setup.lisp"
                                       (user-homedir-pathname))))
  (when (probe-file quicklisp-init)
    (load quicklisp-init)))

;; asdf
(setf asdf:*central-registry* '(*default-pathname-defaults*))


;;; require

(require 'scl)
(require 'gsl)


;;; main

(if (> (length sb-ext:*posix-argv*) 1)
    (let* ((a (parse-integer (nth 1 sb-ext:*posix-argv*)))
           (b (parse-integer (nth 2 sb-ext:*posix-argv*)))
           (n (parse-integer (nth 3 sb-ext:*posix-argv*))))
      (gsl:with-histogram (h n)
        (progn
          (gsl:histogram-set-ranges-uniform h a b)
          (let ((x nil))
            (scl:while (setf x (read *standard-input* nil nil))
              (gsl:histogram-increment h x))
            (dotimes (i (gsl::bins h))
              (multiple-value-bind (lower upper)
                  (gsl:histogram-get-range h i)
                (format t "~,5f~C~,5f~C~,0f~%" lower #\Tab upper #\Tab
                        (gsl:histogram-get h i))))))))
    (princ "invalid argument"))
