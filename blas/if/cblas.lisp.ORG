;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 3.0.10
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.


(cffi:defctype size_t :unsigned-int)

(cffi:defctype CBLAS_INDEX :unsigned-int)

(cffi:defcenum CBLAS_ORDER
	(:CblasRowMajor #.101)
	(:CblasColMajor #.102))

(cffi:defcenum CBLAS_TRANSPOSE
	(:CblasNoTrans #.111)
	(:CblasTrans #.112)
	(:CblasConjTrans #.113))

(cffi:defcenum CBLAS_UPLO
	(:CblasUpper #.121)
	(:CblasLower #.122))

(cffi:defcenum CBLAS_DIAG
	(:CblasNonUnit #.131)
	(:CblasUnit #.132))

(cffi:defcenum CBLAS_SIDE
	(:CblasLeft #.141)
	(:CblasRight #.142))

(cffi:defcfun ("cblas_sdot" cblas_sdot) :float
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cffi:defcfun ("cblas_ddot" cblas_ddot) :double
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cffi:defcfun ("cblas_snrm2" cblas_snrm2) :float
  (N :int)
  (X :pointer)
  (incX :int))

(cffi:defcfun ("cblas_dnrm2" cblas_dnrm2) :double
  (N :int)
  (X :pointer)
  (incX :int))

(cffi:defcfun ("cblas_sasum" cblas_sasum) :float
  (N :int)
  (X :pointer)
  (incX :int))

(cffi:defcfun ("cblas_dasum" cblas_dasum) :double
  (N :int)
  (X :pointer)
  (incX :int))

(cffi:defcfun ("cblas_isamax" cblas_isamax) :unsigned-int
  (N :int)
  (X :pointer)
  (incX :int))

(cffi:defcfun ("cblas_idamax" cblas_idamax) :unsigned-int
  (N :int)
  (X :pointer)
  (incX :int))

(cffi:defcfun ("cblas_sswap" cblas_sswap) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cffi:defcfun ("cblas_dswap" cblas_dswap) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cffi:defcfun ("cblas_scopy" cblas_scopy) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cffi:defcfun ("cblas_dcopy" cblas_dcopy) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cffi:defcfun ("cblas_saxpy" cblas_saxpy) :void
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cffi:defcfun ("cblas_daxpy" cblas_daxpy) :void
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cffi:defcfun ("cblas_sscal" cblas_sscal) :void
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int))

(cffi:defcfun ("cblas_dscal" cblas_dscal) :void
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int))

(cffi:defcfun ("cblas_srotg" cblas_srotg) :void
  (a :pointer)
  (b :pointer)
  (c :pointer)
  (s :pointer))

(cffi:defcfun ("cblas_drotg" cblas_drotg) :void
  (a :pointer)
  (b :pointer)
  (c :pointer)
  (s :pointer))

(cffi:defcfun ("cblas_srot" cblas_srot) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (c :float)
  (s :float))

(cffi:defcfun ("cblas_drot" cblas_drot) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (c :double)
  (s :double))

(cffi:defcfun ("cblas_srotmg" cblas_srotmg) :void
  (d1 :pointer)
  (d2 :pointer)
  (b1 :pointer)
  (b2 :float)
  (P :pointer))

(cffi:defcfun ("cblas_drotmg" cblas_drotmg) :void
  (d1 :pointer)
  (d2 :pointer)
  (b1 :pointer)
  (b2 :double)
  (P :pointer))

(cffi:defcfun ("cblas_srotm" cblas_srotm) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (P :pointer))

(cffi:defcfun ("cblas_drotm" cblas_drotm) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (P :pointer))

(cffi:defcfun ("cblas_sgemv" cblas_sgemv) :void
  (order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (M :int)
  (N :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :float)
  (Y :pointer)
  (incY :int))

(cffi:defcfun ("cblas_dgemv" cblas_dgemv) :void
  (order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (M :int)
  (N :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :double)
  (Y :pointer)
  (incY :int))

(cffi:defcfun ("cblas_strmv" cblas_strmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cffi:defcfun ("cblas_dtrmv" cblas_dtrmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cffi:defcfun ("cblas_strsv" cblas_strsv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cffi:defcfun ("cblas_dtrsv" cblas_dtrsv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cffi:defcfun ("cblas_ssymv" cblas_ssymv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :float)
  (Y :pointer)
  (incY :int))

(cffi:defcfun ("cblas_dsymv" cblas_dsymv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :double)
  (Y :pointer)
  (incY :int))

(cffi:defcfun ("cblas_sger" cblas_sger) :void
  (order CBLAS_ORDER)
  (M :int)
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer)
  (lda :int))

(cffi:defcfun ("cblas_dger" cblas_dger) :void
  (order CBLAS_ORDER)
  (M :int)
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer)
  (lda :int))

(cffi:defcfun ("cblas_ssyr" cblas_ssyr) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int)
  (A :pointer)
  (lda :int))

(cffi:defcfun ("cblas_dsyr" cblas_dsyr) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int)
  (A :pointer)
  (lda :int))

(cffi:defcfun ("cblas_ssyr2" cblas_ssyr2) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer)
  (lda :int))

(cffi:defcfun ("cblas_dsyr2" cblas_dsyr2) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer)
  (lda :int))

(cffi:defcfun ("cblas_sgemm" cblas_sgemm) :void
  (Order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (TransB CBLAS_TRANSPOSE)
  (M :int)
  (N :int)
  (K :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :float)
  (C :pointer)
  (ldc :int))

(cffi:defcfun ("cblas_dgemm" cblas_dgemm) :void
  (Order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (TransB CBLAS_TRANSPOSE)
  (M :int)
  (N :int)
  (K :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :double)
  (C :pointer)
  (ldc :int))

(cffi:defcfun ("cblas_ssymm" cblas_ssymm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (M :int)
  (N :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :float)
  (C :pointer)
  (ldc :int))

(cffi:defcfun ("cblas_dsymm" cblas_dsymm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (M :int)
  (N :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :double)
  (C :pointer)
  (ldc :int))

(cffi:defcfun ("cblas_strmm" cblas_strmm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (M :int)
  (N :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int))

(cffi:defcfun ("cblas_dtrmm" cblas_dtrmm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (M :int)
  (N :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int))

(cffi:defcfun ("cblas_strsm" cblas_strsm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (M :int)
  (N :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int))

(cffi:defcfun ("cblas_dtrsm" cblas_dtrsm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (M :int)
  (N :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int))

(cffi:defcfun ("cblas_ssyrk" cblas_ssyrk) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int)
  (K :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (beta :float)
  (C :pointer)
  (ldc :int))

(cffi:defcfun ("cblas_dsyrk" cblas_dsyrk) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int)
  (K :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (beta :double)
  (C :pointer)
  (ldc :int))

(cffi:defcfun ("cblas_ssyr2k" cblas_ssyr2k) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int)
  (K :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :float)
  (C :pointer)
  (ldc :int))

(cffi:defcfun ("cblas_dsyr2k" cblas_dsyr2k) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int)
  (K :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :double)
  (C :pointer)
  (ldc :int))


